{"version":3,"file":"Button.js","sources":["../../../../src_code/Components/Modal/Consumer/Button.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useModal } from '../Hooks/useModal'\nimport { ModalTypes } from '../Types';\n\n\nconst initialState: ModalTypes['Props']['Button'] = {\n  \n} \n\nexport const Button: ModalTypes['Parts']['Button'] = (props) => {\n  const { type, afterClick, children = \"Button\" } = props\n\n  const { closeModal } = useModal()\n\n  const handleClick = async () => {\n    if (afterClick && afterClick[type]) {\n      const fn = afterClick[type];\n      if (fn) {\n        const result = fn();\n        if (result instanceof Promise) {\n          await result;  // 비동기 함수일 경우\n        }\n        // else {} 동기 함수일 경우 이미 위에서 실행됨\n      }\n    }\n  };\n  \n\n\n  return (\n    <ButtonWrapper onClick={closeModal}>\n      {children}\n    </ButtonWrapper>\n  )\n}\n\nconst ButtonWrapper = styled.button<ModalTypes['Props']['Button']>`\n  cursor: pointer;\n\n  &:hover {\n    color: #007BFF;\n  }\n`"],"names":["Button","props","type","afterClick","_props$children","children","closeModal","useModal","_jsx","ButtonWrapper","onClick","styled","button","_templateObject","_taggedTemplateLiteral"],"mappings":"wRASaA,EAAwC,SAACC,GACFA,EAA1CC,KAA0CD,EAApCE,eAAUC,EAA0BH,EAAxBI,SAAAA,OAAW,IAAHD,EAAG,SAAQA,EAErCE,EAAeC,IAAfD,WAiBR,OACEE,EAACC,EAAa,CAACC,QAASJ,EAAWD,SAChCA,GAGP,EAEMI,EAAgBE,EAAOC,OAAMC,IAAAA,EAAAC,EAMlC,CAAA"}