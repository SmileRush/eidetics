{"version":3,"file":"normalizeCSSValue.js","sources":["../../src_code/Utils/normalizeCSSValue.ts"],"sourcesContent":["import { AllStylesProps } from '#Types'\n\ntype Unit = string | ((value: any) => string)\n\n\nconst defaultUnitMapping: Record<keyof AllStylesProps, Unit> = {\n  // AnimationProps\n  animation: '',\n  animationDelay: 'ms',\n  animationName: '',\n  animationDuration: 'ms',\n  animationFillMode: '',\n  animationIterationCount: '',\n  animationDirection: '',\n  animationPlayState: '',\n  animationTimingFunction: '',\n  // BorderProps\n  border: 'px',\n  borderTop: 'px',\n  borderRight: 'px',\n  borderBottom: 'px',\n  borderLeft: 'px',\n  borderColor: '',\n  borderTopColor: '',\n  borderRightColor: '',\n  borderBottomColor: '',\n  borderLeftColor: '',\n  borderStyle: '',\n  borderTopStyle: '',\n  borderRightStyle: '',\n  borderBottomStyle: '',\n  borderLeftStyle: '',\n  borderRadius: 'px',\n  borderTopRightRadius: 'px',\n  borderTopLeftRadius: 'px',\n  borderBottomRightRadius: 'px',\n  borderBottomLeftRadius: 'px',\n  borderWidth: 'px',\n  borderTopWidth: 'px',\n  borderRightWidth: 'px',\n  borderBottomWidth: 'px',\n  borderLeftWidth: 'px',\n  // ColorProps\n  color: '',\n  b: '',\n  bg: '',\n  background: '',\n  bgColor: '',\n  backgroundColor: '',\n  boxShadow: '',\n  // DimensionProps\n  w: 'px',\n  width: 'px',\n  h: 'px',\n  height: 'px',\n  maxWidth: 'px',\n  minWidth: 'px',\n  maxW: 'px',\n  minW: 'px',\n  maxH: 'px',\n  minH: 'px',\n  maxHeight: 'px',\n  minHeight: 'px',\n  objectFit: '',\n  objectPosition: '',\n  // DisplayProps\n  visibility: '',\n  opacity: '',\n  display: '',\n  // DisplayProps - FlexProps\n  flexDirection: '',\n  alignItems: '',\n  alignContent: '',\n  alignSelf: '',\n  justifyContent: '',\n  flexWrap: '',\n  flexGrow: '',\n  flexShrink: '',\n  flexBasis: 'px',\n  // DisplayProps - GridProps\n  grid: '',\n  gridTemplate: '',\n  gridTemplateColumns: 'px',\n  gridTemplateRows: 'px',\n  gridTemplateAreas: '',\n  gridArea: '',\n  gridColumn: '',\n  gridColumnStart: '',\n  gridColumnEnd: '',\n  gridRow: '',\n  gridRowStart: '',\n  gridRowEnd: '',\n  gridAutoColumns: 'px',\n  gridAutoRows: 'px',\n  gridAutoFlow: '',\n  gridGap: 'px',\n  gridRowGap: 'px',\n  gridColumnGap: 'px',\n  // DisplayProps - OverflowProps\n  overflow: '',\n  overflowX: '',\n  overflowY: '',\n  // FilterProps\n  filter: '',\n  // FontProps\n  fontFamily: '',\n  fontSize: 'px',\n  fontWeight: '',\n  fontStyle: '',\n  textDecoration: '',\n  textAlign: '',\n  lineHeight: 'px',\n  textShadow: '',\n  letterSpacing: 'px',\n  textTransform: '',\n  // InteractionProps\n  cursor: '',\n  userSelect: '',\n  pointerEvents: '',\n  // MarginProps\n  m: 'px',\n  margin: 'px',\n  mt: 'px',\n  marginTop: 'px',\n  mr: 'px',\n  marginRight: 'px',\n  mb: 'px',\n  marginBottom: 'px',\n  ml: 'px',\n  marginLeft: 'px',\n  my: 'px',\n  mx: 'px',\n  // PaddingProps\n  p: 'px',\n  padding: 'px',\n  pt: 'px',\n  paddingTop: 'px',\n  pr: 'px',\n  paddingRight: 'px',\n  pb: 'px',\n  paddingBottom: 'px',\n  pl: 'px',\n  paddingLeft: 'px',\n  px: 'px',\n  py: 'px',\n  // PositionProps\n  position: '',\n  pos: '',\n  top: 'px',\n  right: 'px',\n  bottom: 'px',\n  left: 'px',\n  zIndex: '',\n  clip: '',\n  clipPath: '',\n  // TranslateProps\n  translate: 'px',\n  translateX: 'px',\n  translateY: 'px',\n  translateZ: 'px',\n  // TranslateProps - TransformProps\n  transform: '',\n  transformOrigin: '',\n  transformStyle: '',\n  transformBox: '',\n  // TranslateProps - TransitionProps\n  transition: '',\n  transitionDelay: 'ms',\n  transitionDuration: 'ms',\n  transitionProperty: '',\n  transitionTimingFunction: '',\n  // TranslateProps - ScaleProps\n  scale: '',\n  scaleX: '',\n  scaleY: '',\n  scaleZ: '',\n  // TranslateProps - SkewProps\n  skew: 'deg',\n  skewX: 'deg',\n  skewY: 'deg',\n  skewZ: 'deg',\n  // TranslateProps - RotateProps\n  rotate: 'deg',\n  rotateX: 'deg',\n  rotateY: 'deg',\n  rotateZ: 'deg',\n  // TranslateProps - PerspectiveProps\n  perspective: '',\n  perspectiveOrigin: '',\n  backfaceVisibility: '',\n}\n\nexport const normalizeCSSValue = (prop: keyof AllStylesProps, value: any): string => {\n  const unit = defaultUnitMapping[prop]\n\n  if (typeof value === 'number') {\n    return `${value}${unit}}`\n  } else if (typeof value === 'string') {\n    if (typeof unit === 'string') {\n      if (value.endsWith(unit)) {\n        return value;\n      } else {\n        return `${value}${unit}`;\n      }\n    } else {\n      return value;\n    }\n  } else if (typeof unit === 'function') {\n    return unit(value)\n  }\n\n  return value\n}\n// export const normalizeCSSValue = (prop: keyof AllStylesProps, value: any): string => {\n//   const unit = defaultUnitMapping[prop]\n\n//   if (typeof value === 'number') {\n//     return `${value}${unit}}`\n//   } else if (typeof value === 'string') {\n//     return `${value}${unit}`\n//   } else if (typeof unit === 'function') {\n//     return unit(value)\n//   }\n\n//   return value\n// }\n"],"names":["defaultUnitMapping","animation","animationDelay","animationName","animationDuration","animationFillMode","animationIterationCount","animationDirection","animationPlayState","animationTimingFunction","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderStyle","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","color","b","bg","background","bgColor","backgroundColor","boxShadow","w","width","h","height","maxWidth","minWidth","maxW","minW","maxH","minH","maxHeight","minHeight","objectFit","objectPosition","visibility","opacity","display","flexDirection","alignItems","alignContent","alignSelf","justifyContent","flexWrap","flexGrow","flexShrink","flexBasis","grid","gridTemplate","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","gridColumn","gridColumnStart","gridColumnEnd","gridRow","gridRowStart","gridRowEnd","gridAutoColumns","gridAutoRows","gridAutoFlow","gridGap","gridRowGap","gridColumnGap","overflow","overflowX","overflowY","filter","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","textAlign","lineHeight","textShadow","letterSpacing","textTransform","cursor","userSelect","pointerEvents","m","margin","mt","marginTop","mr","marginRight","mb","marginBottom","ml","marginLeft","my","mx","p","padding","pt","paddingTop","pr","paddingRight","pb","paddingBottom","pl","paddingLeft","px","py","position","pos","top","right","bottom","left","zIndex","clip","clipPath","translate","translateX","translateY","translateZ","transform","transformOrigin","transformStyle","transformBox","transition","transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","skewZ","rotate","rotateX","rotateY","rotateZ","perspective","perspectiveOrigin","backfaceVisibility","normalizeCSSValue","prop","value","unit","concat","endsWith"],"mappings":"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"}